{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["Age","TimerInfo","_ref","days","hours","minutes","seconds","react_default","a","createElement","Box","posed","div","hidden","opacity","visible","Box2","left","x","y","right","window","innerWidth","top","bottom","innerHeight","App","state","row","index","isHidden","toAge","undefined","move","_this2","this","setInterval","setState","Math","floor","random","_this3","dots","props","_this$state","Fragment","className","style","backgroundColor","pose","concat","map","d","i","key","reverse","Button","onClick","to50","variant","to100","index_es","date","Date","renderer","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e625a313.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Countdown from 'react-countdown-now';\nimport posed from 'react-pose';\nimport { Button } from 'react-bootstrap';\n\nconst TimerInfo = ({ days, hours, minutes, seconds }: { days: number, hours: number, minutes: number, seconds: number }) => {\n  return (\n    <span>\n      {days} dni &middot; {hours} godzin &middot; {minutes} minut <span>&middot; {seconds} sekund </span>\n    </span>\n  );\n};\n\ninterface AppProps {\n  dots: Array<Array<{}>>;\n}\n\ninterface AppState {\n  hidden: { row: number, isHidden: boolean, index: number };\n  toAge?: Age;\n  move: boolean;\n}\n\nenum Age {\n  to50 = 50,\n  to100 = 100\n}\n\nconst Box = posed.div({\n  hidden: { opacity: 0 },\n  visible: { opacity: 1 }\n});\n\nconst Box2 = posed.div({\n  left: { x: 10, y: 10 },\n  right: { x: window.innerWidth - 20, y: 10 },\n  top: { y: 10, x: window.innerWidth - 20 },\n  bottom: { y: window.innerHeight - 20, x: window.innerWidth - 20 }\n});\n\nclass App extends React.Component<AppProps, AppState>  {\n\n  state = { hidden: { row: 2, index: 3, isHidden: true }, toAge: undefined, move: true };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({ hidden: { row: Math.floor(Math.random() * 5), index: Math.floor(Math.random() * 9), isHidden: true } });\n    }, 200);\n\n    setInterval(() => {\n      this.setState({ move: !this.state.move });\n    }, 1000);\n  }\n\n  isHidden(hidden: { row: number, isHidden: boolean, index: number }, row: number, index: number) {\n    return hidden.index === index && hidden.row === row && this.isHidden;\n  }\n\n  render() {\n    const { dots } = this.props;\n    const { hidden, toAge, move } = this.state;\n\n    return (\n      <>\n        <div className=\"animate-container\">\n          <Box2 className=\"box-2 animate\" style={{ backgroundColor: `${'purple'}` }} pose={move ? 'right' : 'left'} />\n          <Box2 className=\"box-2 animate\" style={{ left: `${-93}vw`, backgroundColor: `${'yellow'}` }} pose={move ? 'top' : 'bottom'} />\n          <Box2 className=\"box-2 animate\" style={{ top: '94vh', backgroundColor: `${'pink'}` }} pose={move ? 'left' : 'right'} />\n          <Box2 className=\"box-2 animate\" style={{ left: `${0}vw`, backgroundColor: `${'orange'}` }} pose={move ? 'bottom' : 'top'} />\n\n          {dots[0].map((d, i) =>\n            <Box key={i} className=\"box animate\" style={{ left: `${(i + 0.5) * 10}vw`, top: '8vh', backgroundColor: `${d}` }} pose={!this.isHidden(hidden, 0, i) ? 'visible' : 'hidden'} />\n          )}\n\n          {dots[1].reverse().map((d, i) =>\n            <Box key={i} className=\"box animate\" style={{ left: `${(i + 1) * 10}vw`, top: '18vh', backgroundColor: `${d}` }} pose={!this.isHidden(hidden, 1, i) ? 'visible' : 'hidden'} />\n          )}\n\n          {dots[0].map((d, i) =>\n            <Box key={i} className=\"box animate\" style={{ left: `${(i + 0.5) * 10}vw`, top: '28vh', backgroundColor: `${d}` }} pose={!this.isHidden(hidden, 2, i) ? 'visible' : 'hidden'} />\n          )}\n\n          {dots[1].reverse().map((d, i) =>\n            <Box key={i} className=\"box animate\" style={{ left: `${(i + 1) * 10}vw`, top: '65vh', backgroundColor: `${d}` }} pose={!this.isHidden(hidden, 3, i) ? 'visible' : 'hidden'} />\n          )}\n\n          {dots[0].map((d, i) =>\n            <Box key={i} className=\"box animate\" style={{ left: `${(i + 0.5) * 10}vw`, top: '75vh', backgroundColor: `${d}` }} pose={!this.isHidden(hidden, 4, i) ? 'visible' : 'hidden'} />\n          )}\n\n          {dots[1].reverse().map((d, i) =>\n            <Box key={i} className=\"box animate\" style={{ left: `${(i + 1) * 10}vw`, top: '85vh', backgroundColor: `${d}` }} pose={!this.isHidden(hidden, 5, i) ? 'visible' : 'hidden'} />\n          )}\n\n        </div>\n        <div className=\"App\">\n\n          <div className=\"timer-buttons\">\n            <div><h3>Wiiiiiii udało wam się zakończyć 25 lat</h3></div>\n            <div>Ciekawe ile zostało wam do </div>\n            <Button className=\"timer-button\" onClick={() => this.setState({ toAge: Age.to50 })} variant=\"outline-danger\">Piędziesiątki</Button>\n            <Button className=\"timer-button\" onClick={() => this.setState({ toAge: Age.to100 })} variant=\"outline-danger\">Setki</Button>\n          </div>\n          <div className=\"timer\">\n            {toAge && toAge === Age.to100 && <Countdown date={new Date(2094, 6, 1, 1, 0)} renderer={TimerInfo} />}\n            {toAge && toAge === Age.to50 && <Countdown date={new Date(2044, 6, 1, 1, 0)} renderer={TimerInfo} />}\n          </div>\n          <div>\n            {toAge && <span>Nie tak źle ;d</span>}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App dots={[['purple', 'pink', 'purple', 'pink', 'purple', 'pink', 'purple', 'pink', 'purple'], \n['yellow', 'orange', 'yellow', 'orange', 'yellow', 'orange', 'yellow', 'orange', 'yellow']]} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}